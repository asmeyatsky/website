steps:
  # Build the Next.js Website Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--build-arg'
      - 'NEXT_PUBLIC_EMAILJS_CONTACT_SERVICE_ID=service_uyqiqsr'
      - '--build-arg'
      - 'NEXT_PUBLIC_EMAILJS_CONTACT_TEMPLATE_ID=template_ce8x97i'
      - '--build-arg'
      - 'NEXT_PUBLIC_EMAILJS_CONTACT_PUBLIC_KEY=11IgiqqknI_1XVn7c'
      - '--build-arg'
      - 'NEXT_PUBLIC_EMAILJS_NEWSLETTER_SERVICE_ID=service_uyqiqsr'
      - '--build-arg'
      - 'NEXT_PUBLIC_EMAILJS_NEWSLETTER_TEMPLATE_ID=template_pmw9ndd'
      - '--build-arg'
      - 'NEXT_PUBLIC_EMAILJS_NEWSLETTER_PUBLIC_KEY=11IgiqqknI_1XVn7c'
      - '--build-arg'
      - 'NEXT_PUBLIC_GCS_NEWS_JSON_URL=https://storage.googleapis.com/website-469906-ai-news/ai_news.json'
      - '--build-arg'
      - 'CONTENTFUL_SPACE_ID=cxkmb6m0pcxc'
      - '--build-arg'
      - 'CONTENTFUL_ACCESS_TOKEN=wiC8MN-A3xfd1t5PBzKOhgg6Jn2TVX2CGcWe6de_j6o'
      - '-t'
      - 'europe-west1-docker.pkg.dev/$PROJECT_ID/website/website:585f91a'
      - '-t'
      - 'europe-west1-docker.pkg.dev/$PROJECT_ID/website/website:latest'
      - '.'

  # Push the Next.js Website Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - 'europe-west1-docker.pkg.dev/$PROJECT_ID/website/website'

  # Build the AI News Scraper Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-f' # Specify Dockerfile name
      - 'Dockerfile.scraper'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/ai-news-scraper-repo-us/ai-news-scraper:585f91a'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/ai-news-scraper-repo-us/ai-news-scraper:latest'
      - '.' # Build context

  # Push the AI News Scraper Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/ai-news-scraper-repo-us/ai-news-scraper'

  # Test GCS access before Next.js build
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cat', 'gs://$PROJECT_ID-ai-news/ai_news.json']
    id: 'test-gcs-access'

  # Deploy Next.js Website to Staging
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-staging'
    args:
      - 'run'
      - 'deploy'
      - 'website-staging'
      - '--image'
      - 'europe-west1-docker.pkg.dev/$PROJECT_ID/website/website:585f91a'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '1'
      - '--cpu-boost'
      - '--timeout=600'

  # Deploy Next.js Website to Production
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-production'
    args:
      - 'run'
      - 'deploy'
      - 'website'
      - '--image'
      - 'europe-west1-docker.pkg.dev/$PROJECT_ID/website/website:585f91a'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '10'
      - '--cpu-boost'
      - '--timeout=600'


# Store images in Google Container Registry and Artifact Registry
images:
  - 'europe-west1-docker.pkg.dev/$PROJECT_ID/website/website:585f91a'
  - 'europe-west1-docker.pkg.dev/$PROJECT_ID/website/website:latest'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/ai-news-scraper-repo-us/ai-news-scraper:585f91a'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/ai-news-scraper-repo-us/ai-news-scraper:latest'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY

# Timeout for the entire build
timeout: 1200s